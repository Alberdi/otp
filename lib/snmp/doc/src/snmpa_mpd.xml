<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>1999</year><year>2024</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.

    </legalnotice>

    <title>snmpa_mpd</title>
    <prepared></prepared>
    <responsible></responsible>
    <docno></docno>
    <approved></approved>
    <checked></checked>
    <date></date>
    <rev></rev>
    <file>snmpa_mpd.xml</file>
  </header>
  <module since="">snmpa_mpd</module>
  <modulesummary>Message Processing and Dispatch module for the SNMP agent</modulesummary>
  <description>
    <p>The module <c>snmpa_mpd</c> implements the version independent
      Message Processing and Dispatch functionality in SNMP for the agent. 
      It is supposed to be used from a Network Interface process 
      (<seeguide marker="snmp_agent_netif">Definition of Agent Net if</seeguide>).
      </p>

  </description>

  <section>
    <title>DATA TYPES</title>
    <p>For more information, see the
    <seeerl marker="snmpa_conf#types">data types in <c>snmpa_conf</c></seeerl>.
    </p>
  </section>

  <datatypes>
    <datatype>
      <name name="logger"/>
      <desc>
	<p>
	  A <c>fun</c> that handles audit trail logging.
	</p>
      </desc>
    </datatype>

    <datatype>
      <name name="msg_data"/>
      <desc>
	<p>
	  This is the message specific data used in
	  the SNMP message.
	  This value is received in a
	  <seeguide marker="snmp_agent_netif#im_send_pdu"><c>send_pdu</c></seeguide>
	  or
	  <seeguide marker="snmp_agent_netif#im_send_pdu_req">
	  <c>send_pdu_req</c></seeguide>
	  message from the agent (by the net-if process).
	</p>
      </desc>
    </datatype>

    <datatype>
      <name name="msg_data_cmy"/>
      <desc>
	<p>
	  This is the message specific data used in
	  the SNMP message.
	  In SNMPv1 and SNMPv2c, this message data is the community string.
	</p>
      </desc>
    </datatype>

    <datatype>
      <name name="msg_data_ctx"/>
      <desc>
	<p>
	  This is the message specific data used in
	  the SNMP message.
	  In SNMPv3, it is the context information.
	</p>
      </desc>
    </datatype>

    <datatype>
      <name name="acm_data"/>
      <desc>
	<p>
	  This is the message specific data used in
	  the SNMP message.
	  This value is received in a
	  <seeguide marker="snmp_agent_netif#im_send_pdu"><c>send_pdu</c></seeguide>
	  or
	  <seeguide marker="snmp_agent_netif#im_send_pdu_req">
	  <c>send_pdu_req</c></seeguide>
	  message from the agent (by the net-if process).
	</p>
      </desc>
    </datatype>

    <datatype>
      <name name="acm_data_cmy"/>
      <desc>
	<p>
	  This is the message specific data used in
	  the SNMPv1 and SNMPv2c message.
	</p>
      </desc>
    </datatype>

    <datatype>
      <name name="acm_data_v3"/>
      <desc>
	<p>
	  This is the message specific data used in
	  the SNMPv3 message.
	</p>

	<marker id="init"></marker>
      </desc>
    </datatype>

    <datatype>
      <name name="mpd_state"/>
      <!--
      <desc>
	<p>
	  TBD
	</p>
      </desc>
      -->
    </datatype>

  </datatypes>
  
  <funcs>
    <func>
      <name name="init" arity="1" clause_i="1" since=""/>
      <fsummary>Initialize the MPD module</fsummary>
      <desc>
        <p>This function can be called from the net_if process at start-up.
	The options list defines which versions to use. </p>
        <p>It also initializes some SNMP counters. </p>

        <marker id="process_packet"></marker>
      </desc>
    </func>

    <func>
      <name name="process_packet" arity="5" clause_i="1" since="OTP 17.3"/>
      <name name="process_packet" arity="6" clause_i="2" since="OTP R14B"/>
      <fsummary>Process a packet received from the network</fsummary>
      <desc>
        <p>Processes an incoming packet.  Performs authentication and 
	decryption as necessary.  The return values should be passed to the
	agent.</p>

        <note>
          <p>Note that the use of the LocalEngineID argument is only intended 
	  for special cases, if the agent is to "emulate" multiple EngineIDs!
	  By default, the agent uses the value of <c>SnmpEngineID</c> 
	  (see SNMP-FRAMEWORK-MIB). </p>
	</note>

        <marker id="generate_response_msg"></marker>
      </desc>
    </func>

    <func>
      <name name="generate_response_msg" arity="5" clause_i="1" since="OTP R14B"/>
      <name name="generate_response_msg" arity="6" clause_i="1" since="OTP R14B"/>
      <fsummary>Generate a response packet to be sent to the network</fsummary>
      <desc>
        <p>Generates a possibly encrypted response packet to be sent to the
	network. <c>Type</c> is the <c>#pdu.type</c> of the original
	request. </p>

        <note>
	  <p>Note that the use of the LocalEngineID argument is only intended 
	  for special cases, if the agent is to "emulate" multiple EngineIDs!
	  By default, the agent uses the value of <c>SnmpEngineID</c> 
	  (see SNMP-FRAMEWORK-MIB). </p>
	</note>

        <marker id="generate_msg"></marker>
        <marker id="generate_msg_5"></marker>
      </desc>
    </func>

    <func>
      <name name="generate_msg" arity="5" clause_i="1" since="OTP R14B"/>
      <name name="generate_msg" arity="6" clause_i="1" since="OTP R14B"/>
      <fsummary>Generate a request message to be sent to the network</fsummary>
      <desc>
	<p>
	  Generates a possibly encrypted request packet to be sent to the
	  network.
	</p>

	<p>
	  <c>MsgData</c> is the message specific data used in
	  the SNMP message.  This value is received in a
	  <seeguide marker="snmp_agent_netif#im_send_pdu"><c>send_pdu</c></seeguide>
	  or
	  <seeguide marker="snmp_agent_netif#im_send_pdu_req">
	  <c>send_pdu_req</c></seeguide>
	  message from the agent.
	  In SNMPv1 and SNMPv2c, this message data is the
	  <seetype marker="#msg_data_cmy">community</seetype>
	  string.
	  In SNMPv3, it is the
	  <seetype marker="#msg_data_ctx">context</seetype>
	  information.
	</p>

	<p>
          <c>To</c> is a list of destination addresses and
          their corresponding security parameters.  This value is
          received in the same message from the agent and then transformed
	  through
	  <seeerl marker="#process_taddrs"><c>process_taddrs</c></seeerl>
	  before passed to this function.
	</p>

        <note>
	  <p>
	    Note that the use of the LocalEngineID argument is only intended 
            for special cases, if the agent is to "emulate" multiple EngineIDs!
            By default, the agent uses the value of <c>SnmpEngineID</c> 
	    (see SNMP-FRAMEWORK-MIB).
	  </p>
	</note>

        <marker id="process_taddrs"></marker>
     </desc>
    </func>

    <func>
      <name name="process_taddrs" arity="1" clause_i="1" since="OTP 17.3"/>
      <fsummary>Transform addresses from internal MIB format to a less internal
      </fsummary>
      <desc>
	<p>Transforms addresses from internal MIB format to one
	more useful to
	<seeguide marker="snmp_agent_netif">Agent Net if</seeguide>.
	</p>
	<p>See also <seeerl marker="#generate_msg"><c>generate_msg</c>.</seeerl>
	</p>

        <marker id="discarded_pdu"></marker>
      </desc>
    </func>

    <func>
      <name name="discarded_pdu" arity="1" clause_i="1" since=""/>
      <fsummary>Increment the variable associated with a discarded pdu</fsummary>
      <desc>
        <p>Increments the variable associated with a discarded pdu.
	This function can be used when the net_if process receives a
	<c>discarded_pdu</c> message from the agent. </p>
      </desc>
    </func>
  </funcs>
  
</erlref>

